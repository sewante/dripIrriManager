/*
 * License
 * This software is distributed under the license  * 
 * Open to modification and redistribution * 
 */
package ui;

/**
 *
 * @author rober
 */
import dripirrimanager.DripIrriSystem;
import controllers.DripIrriSystemController;
import java.util.ArrayList;
import javax.swing.JComboBox;

public class ConfigureDripSystem extends javax.swing.JFrame {

    private DripIrriSystemController dripIrriSysController;
    /**
     * Creates new form ChooseCrop
     */
    public ConfigureDripSystem() {
        
        dripIrriSysController = new DripIrriSystemController();     // initialize the drip irrigation system controller
        initComponents();
        
        //set the combo box values for the crop
        setComboBoxValues(crop, dripIrriSysController.getCrops());
        // set the combo box values for the lateral pipe
        setComboBoxValues(lateralPipe, dripIrriSysController.getLateralPipes());
        // set the combo box values for the lateral pipe type
        setComboBoxValues(lateralType, dripIrriSysController.getLateralPipeTypes());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        climateAndPET = new javax.swing.ButtonGroup();
        mainPanel = new javax.swing.JPanel();
        footerPanel = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        climateAndPETPanel = new javax.swing.JPanel();
        climateAndPETHeader = new javax.swing.JPanel();
        climateAndPETLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        coolHumidPET = new javax.swing.JRadioButton();
        coolDryPET = new javax.swing.JRadioButton();
        warmHumidPET = new javax.swing.JRadioButton();
        warmDryPET = new javax.swing.JRadioButton();
        hotHumidPET = new javax.swing.JRadioButton();
        hotDryPET = new javax.swing.JRadioButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel11 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        chooseCropPanel = new javax.swing.JPanel();
        cropHeading = new javax.swing.JPanel();
        chooseCropLabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        crop = new javax.swing.JComboBox<>();
        cropLabel = new javax.swing.JLabel();
        pipeAndEmiterPanel = new javax.swing.JPanel();
        pipeEmitterHeading = new javax.swing.JPanel();
        pipeEmitterLabel = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        pipeLabel = new javax.swing.JLabel();
        lateralPipe = new javax.swing.JComboBox<>();
        emitterLable = new javax.swing.JLabel();
        submain = new javax.swing.JComboBox<>();
        pipeLabel2 = new javax.swing.JLabel();
        manifold = new javax.swing.JComboBox<>();
        mainPipe = new javax.swing.JComboBox<>();
        pipeLabel3 = new javax.swing.JLabel();
        pipeLabel4 = new javax.swing.JLabel();
        emitterLable1 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        emitterLable2 = new javax.swing.JLabel();
        emitter = new javax.swing.JComboBox<>();
        lateralType = new javax.swing.JComboBox<>();
        emitterLable3 = new javax.swing.JLabel();
        backToConfigure = new javax.swing.JButton();
        configure = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("dripIrri Manager - Configure Drip Irrigation System");

        mainPanel.setBackground(new java.awt.Color(255, 255, 255));
        mainPanel.setForeground(new java.awt.Color(0, 51, 51));

        footerPanel.setBackground(new java.awt.Color(0, 51, 51));
        footerPanel.setForeground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout footerPanelLayout = new javax.swing.GroupLayout(footerPanel);
        footerPanel.setLayout(footerPanelLayout);
        footerPanelLayout.setHorizontalGroup(
            footerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        footerPanelLayout.setVerticalGroup(
            footerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 29, Short.MAX_VALUE)
        );

        jSeparator1.setBackground(new java.awt.Color(0, 51, 51));
        jSeparator1.setForeground(new java.awt.Color(0, 51, 51));
        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        climateAndPETPanel.setBackground(new java.awt.Color(255, 255, 255));
        climateAndPETPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 51, 51), 2));
        climateAndPETPanel.setForeground(new java.awt.Color(0, 0, 0));

        climateAndPETHeader.setBackground(new java.awt.Color(0, 51, 51));
        climateAndPETHeader.setForeground(new java.awt.Color(255, 255, 255));

        climateAndPETLabel.setBackground(new java.awt.Color(0, 51, 51));
        climateAndPETLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        climateAndPETLabel.setForeground(new java.awt.Color(255, 255, 255));
        climateAndPETLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        climateAndPETLabel.setText("Climate and PET");

        jLabel1.setBackground(new java.awt.Color(0, 51, 51));
        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("4");

        javax.swing.GroupLayout climateAndPETHeaderLayout = new javax.swing.GroupLayout(climateAndPETHeader);
        climateAndPETHeader.setLayout(climateAndPETHeaderLayout);
        climateAndPETHeaderLayout.setHorizontalGroup(
            climateAndPETHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(climateAndPETHeaderLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(climateAndPETLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap())
        );
        climateAndPETHeaderLayout.setVerticalGroup(
            climateAndPETHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(climateAndPETLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(climateAndPETHeaderLayout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE)
                .addContainerGap())
        );

        coolHumidPET.setBackground(new java.awt.Color(255, 255, 255));
        climateAndPET.add(coolHumidPET);
        coolHumidPET.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        coolHumidPET.setForeground(new java.awt.Color(0, 0, 0));
        coolHumidPET.setText("Cool Humid");
        coolHumidPET.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                coolHumidPETActionPerformed(evt);
            }
        });

        coolDryPET.setBackground(new java.awt.Color(255, 255, 255));
        climateAndPET.add(coolDryPET);
        coolDryPET.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        coolDryPET.setForeground(new java.awt.Color(0, 0, 0));
        coolDryPET.setText("Cool Dry");
        coolDryPET.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                coolDryPETActionPerformed(evt);
            }
        });

        warmHumidPET.setBackground(new java.awt.Color(255, 255, 255));
        climateAndPET.add(warmHumidPET);
        warmHumidPET.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        warmHumidPET.setForeground(new java.awt.Color(0, 0, 0));
        warmHumidPET.setText("Warm Humid");
        warmHumidPET.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                warmHumidPETActionPerformed(evt);
            }
        });

        warmDryPET.setBackground(new java.awt.Color(255, 255, 255));
        climateAndPET.add(warmDryPET);
        warmDryPET.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        warmDryPET.setForeground(new java.awt.Color(0, 0, 0));
        warmDryPET.setText("Warm Dry");
        warmDryPET.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                warmDryPETActionPerformed(evt);
            }
        });

        hotHumidPET.setBackground(new java.awt.Color(255, 255, 255));
        climateAndPET.add(hotHumidPET);
        hotHumidPET.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        hotHumidPET.setForeground(new java.awt.Color(0, 0, 0));
        hotHumidPET.setText("Hot Humid");
        hotHumidPET.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hotHumidPETActionPerformed(evt);
            }
        });

        hotDryPET.setBackground(new java.awt.Color(255, 255, 255));
        climateAndPET.add(hotDryPET);
        hotDryPET.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        hotDryPET.setForeground(new java.awt.Color(0, 0, 0));
        hotDryPET.setText("Hot Dry");
        hotDryPET.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hotDryPETActionPerformed(evt);
            }
        });

        jLabel10.setBackground(new java.awt.Color(255, 255, 255));
        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 0, 0));
        jLabel10.setText("WARM");

        jLabel9.setBackground(new java.awt.Color(255, 255, 255));
        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 0, 0));
        jLabel9.setText("HOT");

        jLabel12.setBackground(new java.awt.Color(255, 255, 255));
        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(0, 0, 0));
        jLabel12.setText("COOL");

        jSeparator2.setBackground(new java.awt.Color(0, 51, 51));

        jLabel11.setBackground(new java.awt.Color(255, 255, 255));
        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 0, 0));
        jLabel11.setText("Humid");

        jLabel13.setBackground(new java.awt.Color(255, 255, 255));
        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(0, 0, 0));
        jLabel13.setText("Dry");

        javax.swing.GroupLayout climateAndPETPanelLayout = new javax.swing.GroupLayout(climateAndPETPanel);
        climateAndPETPanel.setLayout(climateAndPETPanelLayout);
        climateAndPETPanelLayout.setHorizontalGroup(
            climateAndPETPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(climateAndPETHeader, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, climateAndPETPanelLayout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addGroup(climateAndPETPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(climateAndPETPanelLayout.createSequentialGroup()
                        .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(21, 21, 21)))
                .addGap(18, 18, 18)
                .addGroup(climateAndPETPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator2)
                    .addGroup(climateAndPETPanelLayout.createSequentialGroup()
                        .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(142, 142, 142)
                        .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(74, 74, 74)
                        .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(49, 49, 49))
                    .addGroup(climateAndPETPanelLayout.createSequentialGroup()
                        .addGroup(climateAndPETPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(coolHumidPET, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(climateAndPETPanelLayout.createSequentialGroup()
                                .addComponent(coolDryPET, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(4, 4, 4)))
                        .addGap(32, 32, 32)
                        .addGroup(climateAndPETPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(warmHumidPET, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(climateAndPETPanelLayout.createSequentialGroup()
                                .addComponent(warmDryPET, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(6, 6, 6)))
                        .addGap(40, 40, 40)
                        .addGroup(climateAndPETPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(climateAndPETPanelLayout.createSequentialGroup()
                                .addComponent(hotDryPET, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(21, 21, 21))
                            .addComponent(hotHumidPET, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(55, 55, 55))
        );
        climateAndPETPanelLayout.setVerticalGroup(
            climateAndPETPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(climateAndPETPanelLayout.createSequentialGroup()
                .addComponent(climateAndPETHeader, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53)
                .addGroup(climateAndPETPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.DEFAULT_SIZE, 10, Short.MAX_VALUE)
                .addGap(11, 11, 11)
                .addGroup(climateAndPETPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(climateAndPETPanelLayout.createSequentialGroup()
                        .addGroup(climateAndPETPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(hotHumidPET, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(coolHumidPET, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(warmHumidPET, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(climateAndPETPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(climateAndPETPanelLayout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(climateAndPETPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(coolDryPET, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(hotDryPET, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(warmDryPET, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(climateAndPETPanelLayout.createSequentialGroup()
                        .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(48, 48, 48)))
                .addGap(62, 62, 62))
        );

        chooseCropPanel.setBackground(new java.awt.Color(255, 255, 255));
        chooseCropPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 51, 51), 2));
        chooseCropPanel.setForeground(new java.awt.Color(0, 0, 0));

        cropHeading.setBackground(new java.awt.Color(0, 51, 51));
        cropHeading.setForeground(new java.awt.Color(255, 255, 255));

        chooseCropLabel.setBackground(new java.awt.Color(0, 51, 51));
        chooseCropLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        chooseCropLabel.setForeground(new java.awt.Color(255, 255, 255));
        chooseCropLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        chooseCropLabel.setText("Choose the Crop to Grow");

        jLabel2.setBackground(new java.awt.Color(0, 51, 51));
        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("5");

        javax.swing.GroupLayout cropHeadingLayout = new javax.swing.GroupLayout(cropHeading);
        cropHeading.setLayout(cropHeadingLayout);
        cropHeadingLayout.setHorizontalGroup(
            cropHeadingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cropHeadingLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(chooseCropLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        cropHeadingLayout.setVerticalGroup(
            cropHeadingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cropHeadingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(chooseCropLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        crop.setBackground(new java.awt.Color(255, 255, 255));
        crop.setForeground(new java.awt.Color(0, 0, 0));
        crop.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cropLabel.setBackground(new java.awt.Color(255, 255, 255));
        cropLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        cropLabel.setForeground(new java.awt.Color(0, 0, 0));
        cropLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cropLabel.setText("Crop:");

        javax.swing.GroupLayout chooseCropPanelLayout = new javax.swing.GroupLayout(chooseCropPanel);
        chooseCropPanel.setLayout(chooseCropPanelLayout);
        chooseCropPanelLayout.setHorizontalGroup(
            chooseCropPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(cropHeading, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(chooseCropPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cropLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(crop, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40))
        );
        chooseCropPanelLayout.setVerticalGroup(
            chooseCropPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(chooseCropPanelLayout.createSequentialGroup()
                .addComponent(cropHeading, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(53, 53, 53)
                .addGroup(chooseCropPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(chooseCropPanelLayout.createSequentialGroup()
                        .addComponent(cropLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)
                        .addGap(91, 91, 91))
                    .addGroup(chooseCropPanelLayout.createSequentialGroup()
                        .addComponent(crop, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        pipeAndEmiterPanel.setBackground(new java.awt.Color(255, 255, 255));
        pipeAndEmiterPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 51, 51), 2));

        pipeEmitterHeading.setBackground(new java.awt.Color(0, 51, 51));

        pipeEmitterLabel.setBackground(new java.awt.Color(0, 51, 51));
        pipeEmitterLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        pipeEmitterLabel.setForeground(new java.awt.Color(255, 255, 255));
        pipeEmitterLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        pipeEmitterLabel.setText("Pipe And Emitter Selection");

        jLabel3.setBackground(new java.awt.Color(0, 51, 51));
        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("6");

        javax.swing.GroupLayout pipeEmitterHeadingLayout = new javax.swing.GroupLayout(pipeEmitterHeading);
        pipeEmitterHeading.setLayout(pipeEmitterHeadingLayout);
        pipeEmitterHeadingLayout.setHorizontalGroup(
            pipeEmitterHeadingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pipeEmitterHeadingLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pipeEmitterLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pipeEmitterHeadingLayout.setVerticalGroup(
            pipeEmitterHeadingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pipeEmitterHeadingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(pipeEmitterLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pipeLabel.setBackground(new java.awt.Color(255, 255, 255));
        pipeLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        pipeLabel.setForeground(new java.awt.Color(0, 0, 0));
        pipeLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        pipeLabel.setText("Submain:");

        lateralPipe.setBackground(new java.awt.Color(255, 255, 255));
        lateralPipe.setForeground(new java.awt.Color(0, 0, 0));
        lateralPipe.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        emitterLable.setBackground(new java.awt.Color(255, 255, 255));
        emitterLable.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        emitterLable.setForeground(new java.awt.Color(0, 0, 0));
        emitterLable.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        emitterLable.setText("Set Dripline:");

        submain.setBackground(new java.awt.Color(255, 255, 255));
        submain.setForeground(new java.awt.Color(0, 0, 0));
        submain.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        pipeLabel2.setBackground(new java.awt.Color(255, 255, 255));
        pipeLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        pipeLabel2.setForeground(new java.awt.Color(0, 0, 0));
        pipeLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        pipeLabel2.setText("Pipe");

        manifold.setBackground(new java.awt.Color(255, 255, 255));
        manifold.setForeground(new java.awt.Color(0, 0, 0));
        manifold.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        mainPipe.setBackground(new java.awt.Color(255, 255, 255));
        mainPipe.setForeground(new java.awt.Color(0, 0, 0));
        mainPipe.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        pipeLabel3.setBackground(new java.awt.Color(255, 255, 255));
        pipeLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        pipeLabel3.setForeground(new java.awt.Color(0, 0, 0));
        pipeLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        pipeLabel3.setText("Main Pipe:");

        pipeLabel4.setBackground(new java.awt.Color(255, 255, 255));
        pipeLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        pipeLabel4.setForeground(new java.awt.Color(0, 0, 0));
        pipeLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        pipeLabel4.setText("Manifold:");

        emitterLable1.setBackground(new java.awt.Color(255, 255, 255));
        emitterLable1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        emitterLable1.setForeground(new java.awt.Color(0, 0, 0));
        emitterLable1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        emitterLable1.setText("Emitter");

        jSeparator3.setBackground(new java.awt.Color(255, 255, 255));
        jSeparator3.setForeground(new java.awt.Color(0, 51, 51));

        emitterLable2.setBackground(new java.awt.Color(255, 255, 255));
        emitterLable2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        emitterLable2.setForeground(new java.awt.Color(0, 0, 0));
        emitterLable2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        emitterLable2.setText("Set Emitter:");

        emitter.setBackground(new java.awt.Color(255, 255, 255));
        emitter.setForeground(new java.awt.Color(0, 0, 0));
        emitter.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        lateralType.setBackground(new java.awt.Color(255, 255, 255));
        lateralType.setForeground(new java.awt.Color(0, 0, 0));
        lateralType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        emitterLable3.setBackground(new java.awt.Color(255, 255, 255));
        emitterLable3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        emitterLable3.setForeground(new java.awt.Color(0, 0, 0));
        emitterLable3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        emitterLable3.setText("Lateral Type:");

        javax.swing.GroupLayout pipeAndEmiterPanelLayout = new javax.swing.GroupLayout(pipeAndEmiterPanel);
        pipeAndEmiterPanel.setLayout(pipeAndEmiterPanelLayout);
        pipeAndEmiterPanelLayout.setHorizontalGroup(
            pipeAndEmiterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pipeEmitterHeading, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(pipeAndEmiterPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pipeAndEmiterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pipeAndEmiterPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(pipeAndEmiterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pipeAndEmiterPanelLayout.createSequentialGroup()
                                .addComponent(pipeLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(223, 223, 223))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pipeAndEmiterPanelLayout.createSequentialGroup()
                                .addComponent(emitterLable1)
                                .addGap(228, 228, 228))))
                    .addGroup(pipeAndEmiterPanelLayout.createSequentialGroup()
                        .addGroup(pipeAndEmiterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pipeAndEmiterPanelLayout.createSequentialGroup()
                                .addGroup(pipeAndEmiterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(emitterLable2)
                                    .addComponent(emitterLable, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(pipeAndEmiterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(emitter, javax.swing.GroupLayout.PREFERRED_SIZE, 367, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lateralPipe, javax.swing.GroupLayout.PREFERRED_SIZE, 367, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 10, Short.MAX_VALUE))
                            .addGroup(pipeAndEmiterPanelLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(pipeAndEmiterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(pipeLabel)
                                    .addComponent(pipeLabel3)
                                    .addComponent(pipeLabel4)
                                    .addComponent(emitterLable3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(pipeAndEmiterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(submain, javax.swing.GroupLayout.PREFERRED_SIZE, 367, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(mainPipe, javax.swing.GroupLayout.PREFERRED_SIZE, 367, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(manifold, javax.swing.GroupLayout.PREFERRED_SIZE, 367, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lateralType, javax.swing.GroupLayout.PREFERRED_SIZE, 367, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(13, 13, 13))
                            .addComponent(jSeparator3))
                        .addContainerGap())))
        );
        pipeAndEmiterPanelLayout.setVerticalGroup(
            pipeAndEmiterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pipeAndEmiterPanelLayout.createSequentialGroup()
                .addComponent(pipeEmitterHeading, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pipeLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pipeAndEmiterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mainPipe, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pipeLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pipeAndEmiterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pipeAndEmiterPanelLayout.createSequentialGroup()
                        .addGap(0, 6, Short.MAX_VALUE)
                        .addComponent(pipeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE)
                        .addGap(148, 148, 148))
                    .addGroup(pipeAndEmiterPanelLayout.createSequentialGroup()
                        .addComponent(submain, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pipeAndEmiterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(manifold, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pipeLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(pipeAndEmiterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lateralType, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(emitterLable3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(47, 47, 47)))
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(emitterLable1, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)
                .addGap(24, 24, 24)
                .addGroup(pipeAndEmiterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(emitterLable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lateralPipe, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addGroup(pipeAndEmiterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(emitter, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(emitterLable2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        backToConfigure.setBackground(new java.awt.Color(0, 51, 51));
        backToConfigure.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        backToConfigure.setForeground(new java.awt.Color(0, 0, 0));
        backToConfigure.setText("Back");
        backToConfigure.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 51, 51), 2, true));
        backToConfigure.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backToConfigureActionPerformed(evt);
            }
        });

        configure.setBackground(new java.awt.Color(0, 51, 51));
        configure.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        configure.setForeground(new java.awt.Color(0, 0, 0));
        configure.setText("Save");
        configure.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 51, 51), 2, true));

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chooseCropPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(climateAndPETPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 8, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pipeAndEmiterPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(footerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addGap(90, 90, 90)
                .addComponent(backToConfigure, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(configure, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32))
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addComponent(climateAndPETPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(chooseCropPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(pipeAndEmiterPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSeparator1))
                .addGap(18, 18, 18)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(configure)
                    .addComponent(backToConfigure))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addComponent(footerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setSize(new java.awt.Dimension(1155, 624));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void coolHumidPETActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_coolHumidPETActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_coolHumidPETActionPerformed

    private void coolDryPETActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_coolDryPETActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_coolDryPETActionPerformed

    private void warmHumidPETActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_warmHumidPETActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_warmHumidPETActionPerformed

    private void warmDryPETActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_warmDryPETActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_warmDryPETActionPerformed

    private void hotHumidPETActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hotHumidPETActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hotHumidPETActionPerformed

    private void hotDryPETActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hotDryPETActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hotDryPETActionPerformed

    private void backToConfigureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backToConfigureActionPerformed
        //ask the user if he really wants to go back
        //load the back interface (donfigure drip tab
        //dispose this tab
        this.dispose();
    }//GEN-LAST:event_backToConfigureActionPerformed
    /**
     * Setting values in the combo box
     */
    private void setComboBoxValues(JComboBox<String> combbox, ArrayList<String> values) {
        String[] categories = new String[values.size()];
        //set the combobox values
        for(int i = 0; i < values.size(); i++) {
            categories[i] = values.get(i);
        }
        combbox.setModel(new javax.swing.DefaultComboBoxModel<>(categories));
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConfigureDripSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConfigureDripSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConfigureDripSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConfigureDripSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ConfigureDripSystem().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backToConfigure;
    private javax.swing.JLabel chooseCropLabel;
    private javax.swing.JPanel chooseCropPanel;
    private javax.swing.ButtonGroup climateAndPET;
    private javax.swing.JPanel climateAndPETHeader;
    private javax.swing.JLabel climateAndPETLabel;
    private javax.swing.JPanel climateAndPETPanel;
    private javax.swing.JButton configure;
    private javax.swing.JRadioButton coolDryPET;
    private javax.swing.JRadioButton coolHumidPET;
    private javax.swing.JComboBox<String> crop;
    private javax.swing.JPanel cropHeading;
    private javax.swing.JLabel cropLabel;
    private javax.swing.JComboBox<String> emitter;
    private javax.swing.JLabel emitterLable;
    private javax.swing.JLabel emitterLable1;
    private javax.swing.JLabel emitterLable2;
    private javax.swing.JLabel emitterLable3;
    private javax.swing.JPanel footerPanel;
    private javax.swing.JRadioButton hotDryPET;
    private javax.swing.JRadioButton hotHumidPET;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JComboBox<String> lateralPipe;
    private javax.swing.JComboBox<String> lateralType;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JComboBox<String> mainPipe;
    private javax.swing.JComboBox<String> manifold;
    private javax.swing.JPanel pipeAndEmiterPanel;
    private javax.swing.JPanel pipeEmitterHeading;
    private javax.swing.JLabel pipeEmitterLabel;
    private javax.swing.JLabel pipeLabel;
    private javax.swing.JLabel pipeLabel2;
    private javax.swing.JLabel pipeLabel3;
    private javax.swing.JLabel pipeLabel4;
    private javax.swing.JComboBox<String> submain;
    private javax.swing.JRadioButton warmDryPET;
    private javax.swing.JRadioButton warmHumidPET;
    // End of variables declaration//GEN-END:variables
}
