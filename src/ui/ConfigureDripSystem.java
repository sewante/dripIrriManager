/*
 * License
 * This software is distributed under the license  * 
 * Open to modification and redistribution * 
 */
package ui;

/**
 *
 * @author robert
 */
import dripirrimanager.DripIrriSystem;
import dripirrimanager.Field;
import dripirrimanager.ErrorLogger;
import controllers.DripIrriSystemController;
import java.awt.Color;
import java.util.ArrayList;
import java.util.Enumeration;
import javax.swing.AbstractButton;
import javax.swing.ButtonGroup;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;

public class ConfigureDripSystem extends javax.swing.JFrame {

    private DripIrriSystemController dripIrriSysController;
    private DripIrriSystem dripIrriSystem;          //the drip irrigation system to be configured
    private Field fieldToConfigure;
    private ErrorLogger logger;
    /**
     * Constructor for testing purposes (TO BE REMOVED)
     */
    public ConfigureDripSystem() {
        
        initComponents();
        //hide the emitter and dripline and lateral and reenable them later
        lateralHeading.hide();
        emitterLable.hide();
        emitter.hide();
        lateralLabel.hide();
        lateralPipe.hide();
        
        dripIrriSysController = new DripIrriSystemController();     // initialize the drip irrigation system controller
        
        fieldToConfigure = new Field();
        
        //set the combo box values for the crop
        setComboBoxValues(crop, dripIrriSysController.getCrops());
        // set the combo box values for the lateral pipe
        setComboBoxValues(lateralPipe, dripIrriSysController.getLateralPipes());
        // set the combo box values for the lateral pipe type
        setComboBoxValues(lateralType, dripIrriSysController.getLateralPipeTypes());
        // set the combo box values for the manifold pipe
        setComboBoxValues(manifoldPipe, dripIrriSysController.getMainifoldPipes());
        // set the combo box values for the main pipe
        setComboBoxValues(mainPipe, dripIrriSysController.getMainPipes());
        // set the combo box values for the submain pipe
        setComboBoxValues(submainPipe, dripIrriSysController.getSubmainPipes());
        
    }
    
    /** CONSTRUCTOR
     *  overload the constructor to accept the the field object
     * @param field The field into which the drip irrigation system is to be set
     */
    public  ConfigureDripSystem(Field field) {
        
        initComponents();
        //hide the emitter and dripline and lateral and reenable them later
        lateralHeading.hide();
        emitterLable.hide();
        emitter.hide();
        lateralLabel.hide();
        lateralPipe.hide();
        
        dripIrriSysController = new DripIrriSystemController();     // initialize the drip irrigation system controller
        fieldToConfigure = new Field();
        fieldToConfigure = field;
        logger = ErrorLogger.getLogger();
        
        //set the combo box values for the crop
        setComboBoxValues(crop, dripIrriSysController.getCrops());
        // set the combo box values for the lateral pipe
        setComboBoxValues(lateralPipe, dripIrriSysController.getLateralPipes());
        // set the combo box values for the lateral pipe type
        setComboBoxValues(lateralType, dripIrriSysController.getLateralPipeTypes());
        // set the combo box values for the manifold pipe
        setComboBoxValues(manifoldPipe, dripIrriSysController.getMainifoldPipes());
        // set the combo box values for the main pipe
        setComboBoxValues(mainPipe, dripIrriSysController.getMainPipes());
        // set the combo box values for the submain pipe
        setComboBoxValues(submainPipe, dripIrriSysController.getSubmainPipes());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        climateAndPET = new javax.swing.ButtonGroup();
        mainPanel = new javax.swing.JPanel();
        footerPanel = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        climateAndPETPanel = new javax.swing.JPanel();
        climateAndPETHeader = new javax.swing.JPanel();
        climateAndPETLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        coolHumidPET = new javax.swing.JRadioButton();
        coolDryPET = new javax.swing.JRadioButton();
        warmHumidPET = new javax.swing.JRadioButton();
        warmDryPET = new javax.swing.JRadioButton();
        hotHumidPET = new javax.swing.JRadioButton();
        hotDryPET = new javax.swing.JRadioButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel11 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        chooseCropPanel = new javax.swing.JPanel();
        cropHeading = new javax.swing.JPanel();
        chooseCropLabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        crop = new javax.swing.JComboBox<>();
        cropLabel = new javax.swing.JLabel();
        pipeAndEmiterPanel = new javax.swing.JPanel();
        pipeEmitterHeading = new javax.swing.JPanel();
        pipeEmitterLabel = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        submainPipeLabel = new javax.swing.JLabel();
        lateralPipe = new javax.swing.JComboBox<>();
        lateralLabel = new javax.swing.JLabel();
        submainPipe = new javax.swing.JComboBox<>();
        pipeLabel2 = new javax.swing.JLabel();
        manifoldPipe = new javax.swing.JComboBox<>();
        mainPipe = new javax.swing.JComboBox<>();
        mainPipeLabel = new javax.swing.JLabel();
        manifoldPipeLabel = new javax.swing.JLabel();
        lateralHeading = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        emitterLable = new javax.swing.JLabel();
        emitter = new javax.swing.JComboBox<>();
        lateralType = new javax.swing.JComboBox<>();
        lateralTypeLabel = new javax.swing.JLabel();
        backToConfigure = new javax.swing.JButton();
        configure = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("dripIrri Manager - Configure Drip Irrigation System");

        mainPanel.setBackground(new java.awt.Color(255, 255, 255));
        mainPanel.setForeground(new java.awt.Color(0, 51, 51));

        footerPanel.setBackground(new java.awt.Color(0, 51, 51));
        footerPanel.setForeground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout footerPanelLayout = new javax.swing.GroupLayout(footerPanel);
        footerPanel.setLayout(footerPanelLayout);
        footerPanelLayout.setHorizontalGroup(
            footerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        footerPanelLayout.setVerticalGroup(
            footerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 29, Short.MAX_VALUE)
        );

        jSeparator1.setBackground(new java.awt.Color(0, 51, 51));
        jSeparator1.setForeground(new java.awt.Color(0, 51, 51));
        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        climateAndPETPanel.setBackground(new java.awt.Color(255, 255, 255));
        climateAndPETPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 51, 51), 2));
        climateAndPETPanel.setForeground(new java.awt.Color(0, 0, 0));

        climateAndPETHeader.setBackground(new java.awt.Color(0, 51, 51));
        climateAndPETHeader.setForeground(new java.awt.Color(255, 255, 255));

        climateAndPETLabel.setBackground(new java.awt.Color(0, 51, 51));
        climateAndPETLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        climateAndPETLabel.setForeground(new java.awt.Color(255, 255, 255));
        climateAndPETLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        climateAndPETLabel.setText("Climate and PET");

        jLabel1.setBackground(new java.awt.Color(0, 51, 51));
        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("4");

        javax.swing.GroupLayout climateAndPETHeaderLayout = new javax.swing.GroupLayout(climateAndPETHeader);
        climateAndPETHeader.setLayout(climateAndPETHeaderLayout);
        climateAndPETHeaderLayout.setHorizontalGroup(
            climateAndPETHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(climateAndPETHeaderLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(climateAndPETLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap())
        );
        climateAndPETHeaderLayout.setVerticalGroup(
            climateAndPETHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(climateAndPETLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(climateAndPETHeaderLayout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE)
                .addContainerGap())
        );

        coolHumidPET.setBackground(new java.awt.Color(255, 255, 255));
        climateAndPET.add(coolHumidPET);
        coolHumidPET.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        coolHumidPET.setForeground(new java.awt.Color(0, 0, 0));
        coolHumidPET.setSelected(true);
        coolHumidPET.setText("Cool Humid");
        coolHumidPET.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                coolHumidPETActionPerformed(evt);
            }
        });

        coolDryPET.setBackground(new java.awt.Color(255, 255, 255));
        climateAndPET.add(coolDryPET);
        coolDryPET.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        coolDryPET.setForeground(new java.awt.Color(0, 0, 0));
        coolDryPET.setText("Cool Dry");
        coolDryPET.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                coolDryPETActionPerformed(evt);
            }
        });

        warmHumidPET.setBackground(new java.awt.Color(255, 255, 255));
        climateAndPET.add(warmHumidPET);
        warmHumidPET.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        warmHumidPET.setForeground(new java.awt.Color(0, 0, 0));
        warmHumidPET.setText("Warm Humid");
        warmHumidPET.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                warmHumidPETActionPerformed(evt);
            }
        });

        warmDryPET.setBackground(new java.awt.Color(255, 255, 255));
        climateAndPET.add(warmDryPET);
        warmDryPET.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        warmDryPET.setForeground(new java.awt.Color(0, 0, 0));
        warmDryPET.setText("Warm Dry");
        warmDryPET.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                warmDryPETActionPerformed(evt);
            }
        });

        hotHumidPET.setBackground(new java.awt.Color(255, 255, 255));
        climateAndPET.add(hotHumidPET);
        hotHumidPET.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        hotHumidPET.setForeground(new java.awt.Color(0, 0, 0));
        hotHumidPET.setText("Hot Humid");
        hotHumidPET.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hotHumidPETActionPerformed(evt);
            }
        });

        hotDryPET.setBackground(new java.awt.Color(255, 255, 255));
        climateAndPET.add(hotDryPET);
        hotDryPET.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        hotDryPET.setForeground(new java.awt.Color(0, 0, 0));
        hotDryPET.setText("Hot Dry");
        hotDryPET.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hotDryPETActionPerformed(evt);
            }
        });

        jLabel10.setBackground(new java.awt.Color(255, 255, 255));
        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 0, 0));
        jLabel10.setText("WARM");

        jLabel9.setBackground(new java.awt.Color(255, 255, 255));
        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 0, 0));
        jLabel9.setText("HOT");

        jLabel12.setBackground(new java.awt.Color(255, 255, 255));
        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(0, 0, 0));
        jLabel12.setText("COOL");

        jSeparator2.setBackground(new java.awt.Color(0, 51, 51));

        jLabel11.setBackground(new java.awt.Color(255, 255, 255));
        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 0, 0));
        jLabel11.setText("Humid");

        jLabel13.setBackground(new java.awt.Color(255, 255, 255));
        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(0, 0, 0));
        jLabel13.setText("Dry");

        javax.swing.GroupLayout climateAndPETPanelLayout = new javax.swing.GroupLayout(climateAndPETPanel);
        climateAndPETPanel.setLayout(climateAndPETPanelLayout);
        climateAndPETPanelLayout.setHorizontalGroup(
            climateAndPETPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(climateAndPETHeader, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, climateAndPETPanelLayout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addGroup(climateAndPETPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(climateAndPETPanelLayout.createSequentialGroup()
                        .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(21, 21, 21)))
                .addGap(18, 18, 18)
                .addGroup(climateAndPETPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator2)
                    .addGroup(climateAndPETPanelLayout.createSequentialGroup()
                        .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(142, 142, 142)
                        .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(74, 74, 74)
                        .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(49, 49, 49))
                    .addGroup(climateAndPETPanelLayout.createSequentialGroup()
                        .addGroup(climateAndPETPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(coolHumidPET, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(climateAndPETPanelLayout.createSequentialGroup()
                                .addComponent(coolDryPET, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(4, 4, 4)))
                        .addGap(32, 32, 32)
                        .addGroup(climateAndPETPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(warmHumidPET, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(climateAndPETPanelLayout.createSequentialGroup()
                                .addComponent(warmDryPET, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(6, 6, 6)))
                        .addGap(40, 40, 40)
                        .addGroup(climateAndPETPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(climateAndPETPanelLayout.createSequentialGroup()
                                .addComponent(hotDryPET, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(21, 21, 21))
                            .addComponent(hotHumidPET, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(55, 55, 55))
        );
        climateAndPETPanelLayout.setVerticalGroup(
            climateAndPETPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(climateAndPETPanelLayout.createSequentialGroup()
                .addComponent(climateAndPETHeader, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53)
                .addGroup(climateAndPETPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.DEFAULT_SIZE, 10, Short.MAX_VALUE)
                .addGap(11, 11, 11)
                .addGroup(climateAndPETPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(climateAndPETPanelLayout.createSequentialGroup()
                        .addGroup(climateAndPETPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(hotHumidPET, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(coolHumidPET, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(warmHumidPET, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(climateAndPETPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(climateAndPETPanelLayout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(climateAndPETPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(coolDryPET, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(hotDryPET, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(warmDryPET, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(climateAndPETPanelLayout.createSequentialGroup()
                        .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(48, 48, 48)))
                .addGap(62, 62, 62))
        );

        chooseCropPanel.setBackground(new java.awt.Color(255, 255, 255));
        chooseCropPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 51, 51), 2));
        chooseCropPanel.setForeground(new java.awt.Color(0, 0, 0));

        cropHeading.setBackground(new java.awt.Color(0, 51, 51));
        cropHeading.setForeground(new java.awt.Color(255, 255, 255));

        chooseCropLabel.setBackground(new java.awt.Color(0, 51, 51));
        chooseCropLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        chooseCropLabel.setForeground(new java.awt.Color(255, 255, 255));
        chooseCropLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        chooseCropLabel.setText("Choose the Crop to Grow");

        jLabel2.setBackground(new java.awt.Color(0, 51, 51));
        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("5");

        javax.swing.GroupLayout cropHeadingLayout = new javax.swing.GroupLayout(cropHeading);
        cropHeading.setLayout(cropHeadingLayout);
        cropHeadingLayout.setHorizontalGroup(
            cropHeadingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cropHeadingLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(chooseCropLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        cropHeadingLayout.setVerticalGroup(
            cropHeadingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cropHeadingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(chooseCropLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        crop.setBackground(new java.awt.Color(255, 255, 255));
        crop.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        crop.setForeground(new java.awt.Color(0, 0, 0));
        crop.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cropLabel.setBackground(new java.awt.Color(255, 255, 255));
        cropLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        cropLabel.setForeground(new java.awt.Color(0, 0, 0));
        cropLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cropLabel.setText("Crop:");

        javax.swing.GroupLayout chooseCropPanelLayout = new javax.swing.GroupLayout(chooseCropPanel);
        chooseCropPanel.setLayout(chooseCropPanelLayout);
        chooseCropPanelLayout.setHorizontalGroup(
            chooseCropPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(cropHeading, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(chooseCropPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cropLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(crop, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40))
        );
        chooseCropPanelLayout.setVerticalGroup(
            chooseCropPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(chooseCropPanelLayout.createSequentialGroup()
                .addComponent(cropHeading, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(53, 53, 53)
                .addGroup(chooseCropPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(crop, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                    .addComponent(cropLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(107, Short.MAX_VALUE))
        );

        pipeAndEmiterPanel.setBackground(new java.awt.Color(255, 255, 255));
        pipeAndEmiterPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 51, 51), 2));

        pipeEmitterHeading.setBackground(new java.awt.Color(0, 51, 51));

        pipeEmitterLabel.setBackground(new java.awt.Color(0, 51, 51));
        pipeEmitterLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        pipeEmitterLabel.setForeground(new java.awt.Color(255, 255, 255));
        pipeEmitterLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        pipeEmitterLabel.setText("Pipe And Emitter Selection");

        jLabel3.setBackground(new java.awt.Color(0, 51, 51));
        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("6");

        javax.swing.GroupLayout pipeEmitterHeadingLayout = new javax.swing.GroupLayout(pipeEmitterHeading);
        pipeEmitterHeading.setLayout(pipeEmitterHeadingLayout);
        pipeEmitterHeadingLayout.setHorizontalGroup(
            pipeEmitterHeadingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pipeEmitterHeadingLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pipeEmitterLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pipeEmitterHeadingLayout.setVerticalGroup(
            pipeEmitterHeadingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pipeEmitterHeadingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(pipeEmitterLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        submainPipeLabel.setBackground(new java.awt.Color(255, 255, 255));
        submainPipeLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        submainPipeLabel.setForeground(new java.awt.Color(0, 0, 0));
        submainPipeLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        submainPipeLabel.setText("Submain:");

        lateralPipe.setBackground(new java.awt.Color(255, 255, 255));
        lateralPipe.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lateralPipe.setForeground(new java.awt.Color(0, 0, 0));
        lateralPipe.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        lateralLabel.setBackground(new java.awt.Color(255, 255, 255));
        lateralLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lateralLabel.setForeground(new java.awt.Color(0, 0, 0));
        lateralLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lateralLabel.setText("Set Dripline:");

        submainPipe.setBackground(new java.awt.Color(255, 255, 255));
        submainPipe.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        submainPipe.setForeground(new java.awt.Color(0, 0, 0));
        submainPipe.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        pipeLabel2.setBackground(new java.awt.Color(255, 255, 255));
        pipeLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        pipeLabel2.setForeground(new java.awt.Color(0, 0, 0));
        pipeLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        pipeLabel2.setText("Pipe");

        manifoldPipe.setBackground(new java.awt.Color(255, 255, 255));
        manifoldPipe.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        manifoldPipe.setForeground(new java.awt.Color(0, 0, 0));
        manifoldPipe.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        mainPipe.setBackground(new java.awt.Color(255, 255, 255));
        mainPipe.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        mainPipe.setForeground(new java.awt.Color(0, 0, 0));
        mainPipe.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        mainPipeLabel.setBackground(new java.awt.Color(255, 255, 255));
        mainPipeLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        mainPipeLabel.setForeground(new java.awt.Color(0, 0, 0));
        mainPipeLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        mainPipeLabel.setText("Main Pipe:");

        manifoldPipeLabel.setBackground(new java.awt.Color(255, 255, 255));
        manifoldPipeLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        manifoldPipeLabel.setForeground(new java.awt.Color(0, 0, 0));
        manifoldPipeLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        manifoldPipeLabel.setText("Manifold:");

        lateralHeading.setBackground(new java.awt.Color(255, 255, 255));
        lateralHeading.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lateralHeading.setForeground(new java.awt.Color(0, 0, 0));
        lateralHeading.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lateralHeading.setText("Emitter");

        jSeparator3.setBackground(new java.awt.Color(255, 255, 255));
        jSeparator3.setForeground(new java.awt.Color(0, 51, 51));

        emitterLable.setBackground(new java.awt.Color(255, 255, 255));
        emitterLable.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        emitterLable.setForeground(new java.awt.Color(0, 0, 0));
        emitterLable.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        emitterLable.setText("Set Emitter:");

        emitter.setBackground(new java.awt.Color(255, 255, 255));
        emitter.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        emitter.setForeground(new java.awt.Color(0, 0, 0));
        emitter.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        lateralType.setBackground(new java.awt.Color(255, 255, 255));
        lateralType.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lateralType.setForeground(new java.awt.Color(0, 0, 0));
        lateralType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        lateralType.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                lateralTypeItemStateChanged(evt);
            }
        });
        lateralType.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lateralTypeMouseClicked(evt);
            }
        });

        lateralTypeLabel.setBackground(new java.awt.Color(255, 255, 255));
        lateralTypeLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lateralTypeLabel.setForeground(new java.awt.Color(0, 0, 0));
        lateralTypeLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lateralTypeLabel.setText("Lateral Type:");

        javax.swing.GroupLayout pipeAndEmiterPanelLayout = new javax.swing.GroupLayout(pipeAndEmiterPanel);
        pipeAndEmiterPanel.setLayout(pipeAndEmiterPanelLayout);
        pipeAndEmiterPanelLayout.setHorizontalGroup(
            pipeAndEmiterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pipeEmitterHeading, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(pipeAndEmiterPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pipeAndEmiterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pipeAndEmiterPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(pipeAndEmiterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pipeAndEmiterPanelLayout.createSequentialGroup()
                                .addComponent(pipeLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(223, 223, 223))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pipeAndEmiterPanelLayout.createSequentialGroup()
                                .addComponent(lateralHeading)
                                .addGap(228, 228, 228))))
                    .addGroup(pipeAndEmiterPanelLayout.createSequentialGroup()
                        .addGroup(pipeAndEmiterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pipeAndEmiterPanelLayout.createSequentialGroup()
                                .addGroup(pipeAndEmiterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(emitterLable)
                                    .addComponent(lateralLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(pipeAndEmiterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(emitter, javax.swing.GroupLayout.PREFERRED_SIZE, 367, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lateralPipe, javax.swing.GroupLayout.PREFERRED_SIZE, 367, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 16, Short.MAX_VALUE))
                            .addGroup(pipeAndEmiterPanelLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(pipeAndEmiterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(submainPipeLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(mainPipeLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(manifoldPipeLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lateralTypeLabel, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(pipeAndEmiterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(submainPipe, javax.swing.GroupLayout.PREFERRED_SIZE, 367, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(mainPipe, javax.swing.GroupLayout.PREFERRED_SIZE, 367, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(manifoldPipe, javax.swing.GroupLayout.PREFERRED_SIZE, 367, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lateralType, javax.swing.GroupLayout.PREFERRED_SIZE, 367, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(13, 13, 13))
                            .addComponent(jSeparator3))
                        .addContainerGap())))
        );
        pipeAndEmiterPanelLayout.setVerticalGroup(
            pipeAndEmiterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pipeAndEmiterPanelLayout.createSequentialGroup()
                .addComponent(pipeEmitterHeading, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pipeLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pipeAndEmiterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pipeAndEmiterPanelLayout.createSequentialGroup()
                        .addGroup(pipeAndEmiterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(mainPipe, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mainPipeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(submainPipe, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(submainPipeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(pipeAndEmiterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(manifoldPipe, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(manifoldPipeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addGroup(pipeAndEmiterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lateralType, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lateralTypeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(47, 47, 47)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lateralHeading)
                .addGap(18, 18, 18)
                .addGroup(pipeAndEmiterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lateralPipe, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lateralLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addGroup(pipeAndEmiterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(emitter, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(emitterLable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(26, 26, 26))
        );

        backToConfigure.setBackground(new java.awt.Color(0, 51, 51));
        backToConfigure.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        backToConfigure.setForeground(new java.awt.Color(0, 0, 0));
        backToConfigure.setText("Back");
        backToConfigure.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 51, 51), 2, true));
        backToConfigure.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backToConfigureActionPerformed(evt);
            }
        });

        configure.setBackground(new java.awt.Color(0, 51, 51));
        configure.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        configure.setForeground(new java.awt.Color(0, 0, 0));
        configure.setText("Save");
        configure.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 51, 51), 2, true));
        configure.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                configureActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chooseCropPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(climateAndPETPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 8, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pipeAndEmiterPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(footerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addGap(90, 90, 90)
                .addComponent(backToConfigure, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(configure, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32))
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addComponent(climateAndPETPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(chooseCropPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(pipeAndEmiterPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSeparator1))
                .addGap(18, 18, 18)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(configure)
                    .addComponent(backToConfigure))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(footerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setSize(new java.awt.Dimension(1155, 624));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void coolHumidPETActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_coolHumidPETActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_coolHumidPETActionPerformed

    private void coolDryPETActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_coolDryPETActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_coolDryPETActionPerformed

    private void warmHumidPETActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_warmHumidPETActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_warmHumidPETActionPerformed

    private void warmDryPETActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_warmDryPETActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_warmDryPETActionPerformed

    private void hotHumidPETActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hotHumidPETActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hotHumidPETActionPerformed

    private void hotDryPETActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hotDryPETActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hotDryPETActionPerformed

    private void backToConfigureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backToConfigureActionPerformed
        //ask the user if he really wants to go back
        //load the back interface (donfigure drip tab
        //dispose this tab
        this.dispose();
    }//GEN-LAST:event_backToConfigureActionPerformed

    private void configureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_configureActionPerformed
        
        if(lateralType.getSelectedItem().equals("--Select lateral--")) {
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Choose the type of Lateral.", "Latera Type Not set!", JOptionPane.ERROR_MESSAGE);
            lateralTypeLabel.setForeground(Color.red);
            return;
        }
        // pick the input from the form
        try {
            
            String climate = getSelectedButton(climateAndPET);
            String cropGrown = (String)crop.getSelectedItem();
            String typeOfLateral = (String)lateralType.getSelectedItem();   // just a control variable to guide selection of pipes
            String pipeSubmain = (String)submainPipe.getSelectedItem();
            String pipeManifold = (String)manifoldPipe.getSelectedItem();
            String pipeMain = (String)mainPipe.getSelectedItem();
            String pipeLateral = (String)lateralPipe.getSelectedItem();
            
            // package the field object 
            fieldToConfigure.setFieldClimatePET(climate);
            fieldToConfigure.setFieldCropGrown(cropGrown);
            
            //package the pipes
            dripIrriSystem = new DripIrriSystem(fieldToConfigure);
            
            dripIrriSystem.setMainPipe(pipeMain);
            dripIrriSystem.setManifoldPipe(pipeManifold);
            dripIrriSystem.setSubmainPipe(pipeSubmain);
            dripIrriSystem.setCrop(cropGrown);
            dripIrriSystem.setLateralPipeType(typeOfLateral);
            
            /* THIS WILL HAVE TO BE IMPLEMENTED IN ANOTHER WAY TO CATER FOR ALL POSSIBLE CONFIGURATIONS!
                preferably a configure fucntion needs to be called here to ensure all the possible pipe combinations
                For now we shall focus on two combinations only i.e with dripline and with blank tubing as lateral
            */
            if(typeOfLateral.equals("Dripline")) {
                                
                dripIrriSystem.setDriplinePipe(pipeLateral);
                
                // send the DripIrri system object to the controller
                dripIrriSysController.configureDripIrriSystem(dripIrriSystem);
                
                // dispose this window
                this.dispose();
            }
            else if(typeOfLateral.equals("Blank Tubing")) {
                //set the the blank tubing lateral and emitter for systems wbich use blank tubing
                dripIrriSystem.setLateralPipe(pipeLateral);
                dripIrriSystem.setEmitter((String)emitter.getSelectedItem());
                
                // send the DripIrri system object to the controller
                dripIrriSysController.configureDripIrriSystem(dripIrriSystem);
                
                // dispose this window
                this.dispose();
            }            
        }
        catch(Exception e) {
            logger.logError("ui.ConfigureDripSystem.ConfigureDripSystem " + e.getMessage());
        }
    }//GEN-LAST:event_configureActionPerformed

    private void lateralTypeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_lateralTypeItemStateChanged
        
        // check the value chosen
        if(lateralType.getSelectedItem().equals("Dripline")) {
            //show the lateral heading
            lateralHeading.show();
            lateralHeading.setText("Choose Dripline");
            
            //show the dripline combo box
            lateralLabel.show();
            lateralLabel.setText("Set Dripline:");
            lateralPipe.show();
            setComboBoxValues(lateralPipe, dripIrriSysController.getDriplinePipes());
            //hide the emitter since dripline has emitter on it
            emitterLable.hide();    //hide the emitter lable
            emitter.hide();         //hide the emitter combo box
        }
        else if(lateralType.getSelectedItem().equals("Blank Tubing")) {
            //show the lateral heading
            lateralHeading.show();
            lateralHeading.setText("Choose Lateral and Emitter");
            
            //show the lateral pipe (for blank tubing
            lateralLabel.show();
            lateralLabel.setText("Set Lateral:");
            lateralPipe.show();
            setComboBoxValues(lateralPipe, dripIrriSysController.getLateralPipes());
            
            //show the emitter label
            emitterLable.show(); // show the emitter label
            emitterLable.setText("Emitter :");
            //show the emitter combo box
            emitter.show();
            setComboBoxValues(emitter, dripIrriSysController.getEmitters());
        }
        else {
            lateralHeading.hide();
            emitterLable.hide();
            emitter.hide();
            lateralLabel.hide();
            lateralPipe.hide();
        }
    }//GEN-LAST:event_lateralTypeItemStateChanged

    private void lateralTypeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lateralTypeMouseClicked
        //Restore the original blcak color of the lable when it is clicked into
        lateralTypeLabel.setForeground(Color.BLACK);
    }//GEN-LAST:event_lateralTypeMouseClicked
    /**
     * Setting values in the combo box
     */
    private void setComboBoxValues(JComboBox<String> combbox, ArrayList<String> values) {
        String[] categories = new String[values.size()];
        //set the combobox values
        for(int i = 0; i < values.size(); i++) {
            categories[i] = values.get(i);
        }
        combbox.setModel(new javax.swing.DefaultComboBoxModel<>(categories));
    }
    /**
     * Getting the value of the selected radio button in a button group
     */
    private String getSelectedButton(ButtonGroup buttonGroup) {
        
        for(Enumeration<AbstractButton> buttons = buttonGroup.getElements(); buttons.hasMoreElements();) {
            AbstractButton button = buttons.nextElement();
            
            if(button.isSelected()) {
                return button.getText();
            }
        }
        return null;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConfigureDripSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConfigureDripSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConfigureDripSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConfigureDripSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ConfigureDripSystem().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backToConfigure;
    private javax.swing.JLabel chooseCropLabel;
    private javax.swing.JPanel chooseCropPanel;
    private javax.swing.ButtonGroup climateAndPET;
    private javax.swing.JPanel climateAndPETHeader;
    private javax.swing.JLabel climateAndPETLabel;
    private javax.swing.JPanel climateAndPETPanel;
    private javax.swing.JButton configure;
    private javax.swing.JRadioButton coolDryPET;
    private javax.swing.JRadioButton coolHumidPET;
    private javax.swing.JComboBox<String> crop;
    private javax.swing.JPanel cropHeading;
    private javax.swing.JLabel cropLabel;
    private javax.swing.JComboBox<String> emitter;
    private javax.swing.JLabel emitterLable;
    private javax.swing.JPanel footerPanel;
    private javax.swing.JRadioButton hotDryPET;
    private javax.swing.JRadioButton hotHumidPET;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JLabel lateralHeading;
    private javax.swing.JLabel lateralLabel;
    private javax.swing.JComboBox<String> lateralPipe;
    private javax.swing.JComboBox<String> lateralType;
    private javax.swing.JLabel lateralTypeLabel;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JComboBox<String> mainPipe;
    private javax.swing.JLabel mainPipeLabel;
    private javax.swing.JComboBox<String> manifoldPipe;
    private javax.swing.JLabel manifoldPipeLabel;
    private javax.swing.JPanel pipeAndEmiterPanel;
    private javax.swing.JPanel pipeEmitterHeading;
    private javax.swing.JLabel pipeEmitterLabel;
    private javax.swing.JLabel pipeLabel2;
    private javax.swing.JComboBox<String> submainPipe;
    private javax.swing.JLabel submainPipeLabel;
    private javax.swing.JRadioButton warmDryPET;
    private javax.swing.JRadioButton warmHumidPET;
    // End of variables declaration//GEN-END:variables
}
