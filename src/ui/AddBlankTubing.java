/*
 * License
 * This software is distributed under the license  * 
 * Open to modification and redistribution * 
 */

/**
 * PURPOSE:
 *      This file is used to add a new pipe to the system (either the main, manifold or sub-main or lateral pipe)
 */
package ui;

import controllers.Pipes;
import dripirrimanager.NewPipe;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;

/**
 *
 * @author rober
 */
public class AddBlankTubing extends javax.swing.JFrame {

    Pipes pipe;
    NewPipe newPipe;
    /**
     * Creates new form AddBlankTubing
     */
    public AddBlankTubing() {
        initComponents();
        
        pipe = new Pipes();         //initialize the pipes controller
        newPipe = new NewPipe();    //initialize the new pie object to add to the system
        
        //set the combobox values for the pipe categories
        setComboBoxValues(pipeCategory, pipe.getPipeCategories());
        //set the combobox values for the pipe color
        setComboBoxValues(color, pipe.getPipeColors());
        //set the combobox values for the pipe materials
        setComboBoxValues(material, pipe.getPipeMaterials());
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addBlankipePanel = new javax.swing.JPanel();
        footerPanel = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        andBlankTubingHeading = new javax.swing.JLabel();
        modelNameLabel = new javax.swing.JLabel();
        flowRateLabel = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        coilLengthLabel = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        intDiameterLabel = new javax.swing.JLabel();
        pipeCostLabel = new javax.swing.JLabel();
        extDiameterLabel = new javax.swing.JLabel();
        modelName = new javax.swing.JTextField();
        material = new javax.swing.JComboBox<>();
        flowRate = new javax.swing.JTextField();
        pipeCost = new javax.swing.JTextField();
        internalDiameter = new javax.swing.JTextField();
        pipeCategory = new javax.swing.JComboBox<>();
        externalDiameter = new javax.swing.JTextField();
        color = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        cancelBtn = new javax.swing.JButton();
        saveBtn = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        coilLength = new javax.swing.JTextField();
        costError = new javax.swing.JLabel();
        flowRateError = new javax.swing.JLabel();
        coilLengthError = new javax.swing.JLabel();
        intDiameterError = new javax.swing.JLabel();
        extDiameterError = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("dripIrri Manager - Add Blank Tubing");
        setPreferredSize(new java.awt.Dimension(1139, 585));

        addBlankipePanel.setBackground(new java.awt.Color(255, 255, 255));
        addBlankipePanel.setForeground(new java.awt.Color(0, 0, 0));
        addBlankipePanel.setPreferredSize(new java.awt.Dimension(1113, 560));

        footerPanel.setBackground(new java.awt.Color(0, 51, 51));

        javax.swing.GroupLayout footerPanelLayout = new javax.swing.GroupLayout(footerPanel);
        footerPanel.setLayout(footerPanelLayout);
        footerPanelLayout.setHorizontalGroup(
            footerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        footerPanelLayout.setVerticalGroup(
            footerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 27, Short.MAX_VALUE)
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 51, 51), 2, true));

        jPanel3.setBackground(new java.awt.Color(0, 51, 51));
        jPanel3.setForeground(new java.awt.Color(0, 0, 0));

        andBlankTubingHeading.setBackground(new java.awt.Color(255, 255, 255));
        andBlankTubingHeading.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        andBlankTubingHeading.setForeground(new java.awt.Color(255, 255, 255));
        andBlankTubingHeading.setText("Add Details for the Blank Tubing and Click Save");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(andBlankTubingHeading, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(779, 779, 779))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(andBlankTubingHeading, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 6, Short.MAX_VALUE))
        );

        modelNameLabel.setBackground(new java.awt.Color(255, 255, 255));
        modelNameLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        modelNameLabel.setForeground(new java.awt.Color(0, 0, 0));
        modelNameLabel.setText("Model Name :");

        flowRateLabel.setBackground(new java.awt.Color(255, 255, 255));
        flowRateLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        flowRateLabel.setForeground(new java.awt.Color(0, 0, 0));
        flowRateLabel.setText("Flow rate :");

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Color :");

        coilLengthLabel.setBackground(new java.awt.Color(255, 255, 255));
        coilLengthLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        coilLengthLabel.setForeground(new java.awt.Color(0, 0, 0));
        coilLengthLabel.setText("Coil Length :");

        jLabel6.setBackground(new java.awt.Color(255, 255, 255));
        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("Pipe Category :");

        intDiameterLabel.setBackground(new java.awt.Color(255, 255, 255));
        intDiameterLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        intDiameterLabel.setForeground(new java.awt.Color(0, 0, 0));
        intDiameterLabel.setText("Internal Diameter :");

        pipeCostLabel.setBackground(new java.awt.Color(255, 255, 255));
        pipeCostLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        pipeCostLabel.setForeground(new java.awt.Color(0, 0, 0));
        pipeCostLabel.setText("Cost UGx :");

        extDiameterLabel.setBackground(new java.awt.Color(255, 255, 255));
        extDiameterLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        extDiameterLabel.setForeground(new java.awt.Color(0, 0, 0));
        extDiameterLabel.setText("External Diameter :");

        modelName.setBackground(new java.awt.Color(255, 255, 255));
        modelName.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        modelName.setForeground(new java.awt.Color(0, 0, 0));
        modelName.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                modelNameMouseClicked(evt);
            }
        });

        material.setBackground(new java.awt.Color(255, 255, 255));
        material.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        material.setForeground(new java.awt.Color(0, 0, 0));
        material.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        flowRate.setBackground(new java.awt.Color(255, 255, 255));
        flowRate.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        flowRate.setForeground(new java.awt.Color(0, 0, 0));
        flowRate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                flowRateMouseClicked(evt);
            }
        });
        flowRate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                flowRateKeyPressed(evt);
            }
        });

        pipeCost.setBackground(new java.awt.Color(255, 255, 255));
        pipeCost.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        pipeCost.setForeground(new java.awt.Color(0, 0, 0));
        pipeCost.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pipeCostMouseClicked(evt);
            }
        });
        pipeCost.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                pipeCostKeyPressed(evt);
            }
        });

        internalDiameter.setBackground(new java.awt.Color(255, 255, 255));
        internalDiameter.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        internalDiameter.setForeground(new java.awt.Color(0, 0, 0));
        internalDiameter.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                internalDiameterMouseClicked(evt);
            }
        });
        internalDiameter.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                internalDiameterKeyPressed(evt);
            }
        });

        pipeCategory.setBackground(new java.awt.Color(255, 255, 255));
        pipeCategory.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        pipeCategory.setForeground(new java.awt.Color(0, 0, 0));
        pipeCategory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        pipeCategory.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));

        externalDiameter.setBackground(new java.awt.Color(255, 255, 255));
        externalDiameter.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        externalDiameter.setForeground(new java.awt.Color(0, 0, 0));
        externalDiameter.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                externalDiameterMouseClicked(evt);
            }
        });
        externalDiameter.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                externalDiameterKeyPressed(evt);
            }
        });

        color.setBackground(new java.awt.Color(255, 255, 255));
        color.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        color.setForeground(new java.awt.Color(0, 0, 0));
        color.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("m");

        jLabel10.setBackground(new java.awt.Color(255, 255, 255));
        jLabel10.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 0, 0));
        jLabel10.setText("l/h");

        jLabel11.setBackground(new java.awt.Color(255, 255, 255));
        jLabel11.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 0, 0));
        jLabel11.setText("inch");

        jLabel12.setBackground(new java.awt.Color(255, 255, 255));
        jLabel12.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(0, 0, 0));
        jLabel12.setText("inch");

        cancelBtn.setBackground(new java.awt.Color(0, 51, 51));
        cancelBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        cancelBtn.setForeground(new java.awt.Color(0, 0, 0));
        cancelBtn.setText("Cancel");
        cancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBtnActionPerformed(evt);
            }
        });

        saveBtn.setBackground(new java.awt.Color(0, 51, 51));
        saveBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        saveBtn.setForeground(new java.awt.Color(0, 0, 0));
        saveBtn.setText("Save");
        saveBtn.setBorderPainted(false);
        saveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBtnActionPerformed(evt);
            }
        });

        jLabel14.setBackground(new java.awt.Color(255, 255, 255));
        jLabel14.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(0, 0, 0));
        jLabel14.setText("Material :");

        coilLength.setBackground(new java.awt.Color(255, 255, 255));
        coilLength.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        coilLength.setForeground(new java.awt.Color(0, 0, 0));
        coilLength.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                coilLengthMouseClicked(evt);
            }
        });
        coilLength.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                coilLengthKeyPressed(evt);
            }
        });

        costError.setBackground(new java.awt.Color(255, 255, 255));
        costError.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        costError.setForeground(new java.awt.Color(204, 0, 0));

        flowRateError.setBackground(new java.awt.Color(255, 255, 255));
        flowRateError.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        flowRateError.setForeground(new java.awt.Color(204, 0, 0));

        coilLengthError.setBackground(new java.awt.Color(255, 255, 255));
        coilLengthError.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        coilLengthError.setForeground(new java.awt.Color(204, 0, 0));

        intDiameterError.setBackground(new java.awt.Color(255, 255, 255));
        intDiameterError.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        intDiameterError.setForeground(new java.awt.Color(204, 0, 0));

        extDiameterError.setBackground(new java.awt.Color(255, 255, 255));
        extDiameterError.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        extDiameterError.setForeground(new java.awt.Color(204, 0, 0));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(190, 190, 190)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel6)
                        .addComponent(modelNameLabel)
                        .addComponent(flowRateLabel)
                        .addComponent(jLabel4)
                        .addComponent(intDiameterLabel, javax.swing.GroupLayout.Alignment.LEADING))
                    .addComponent(extDiameterLabel)
                    .addComponent(coilLengthLabel)
                    .addComponent(pipeCostLabel)
                    .addComponent(jLabel14))
                .addGap(46, 46, 46)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(cancelBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(saveBtn))
                            .addComponent(pipeCost, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(coilLength, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(externalDiameter)
                            .addComponent(material, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel11)
                        .addGap(352, 352, 352))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(flowRate)
                                    .addComponent(pipeCategory, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(color, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(modelName, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(internalDiameter, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel12))))
                        .addGap(49, 49, 49)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(flowRateError, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(extDiameterError, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(coilLengthError, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(intDiameterError, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(costError, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(modelNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(modelName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pipeCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(flowRateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(flowRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(flowRateError, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(color, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(internalDiameter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(intDiameterError, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(intDiameterLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(externalDiameter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(extDiameterLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(extDiameterError, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(coilLength, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(coilLengthError, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(material, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(coilLengthLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pipeCostLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pipeCost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(costError, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(saveBtn)
                    .addComponent(cancelBtn))
                .addContainerGap(51, Short.MAX_VALUE))
        );

        jLabel13.setBackground(new java.awt.Color(255, 255, 255));
        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(0, 0, 0));
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("Add a New Blank Tubing");

        javax.swing.GroupLayout addBlankipePanelLayout = new javax.swing.GroupLayout(addBlankipePanel);
        addBlankipePanel.setLayout(addBlankipePanelLayout);
        addBlankipePanelLayout.setHorizontalGroup(
            addBlankipePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(footerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(addBlankipePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addBlankipePanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel13)
                .addGap(514, 514, 514))
        );
        addBlankipePanelLayout.setVerticalGroup(
            addBlankipePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addBlankipePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(footerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(addBlankipePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(addBlankipePanel, javax.swing.GroupLayout.DEFAULT_SIZE, 652, Short.MAX_VALUE)
        );

        setSize(new java.awt.Dimension(1129, 691));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBtnActionPerformed
        //close the add New Blank tubing interface
        this.dispose();
    }//GEN-LAST:event_cancelBtnActionPerformed

    private void modelNameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_modelNameMouseClicked
        //Restore the original blcak color of the lable when it is clicked into
        modelNameLabel.setForeground(Color.BLACK);
    }//GEN-LAST:event_modelNameMouseClicked

    private void saveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBtnActionPerformed
        
        String pipeModel, categoryOfPipe, colorOfPipe, materialOfPipe;
        float pipeFlowRate, pipeInternalDiameter, pipeExternalDiameter, pipeCoilLength, cost;
        
        /* validate the data input */
        
        //validate pipe model name
        if(modelName.getText().isEmpty()) {
            //show a dialog box with the error message
           JOptionPane.showMessageDialog(rootPane, "Provide the model name of the pipe.", "Empty Model Name!", JOptionPane.ERROR_MESSAGE);
            modelNameLabel.setForeground(Color.red);
            return;
        }
        //validate pipe flow rate
        if(flowRate.getText().isEmpty()) {
            //show a dialog box with the error message
           JOptionPane.showMessageDialog(rootPane, "Provide the flow rate of the pipe.", "Empty Flow rate!", JOptionPane.ERROR_MESSAGE);
            flowRateLabel.setForeground(Color.red);
            return;
        }
        //validate internal Diameter of the pipe
        if(internalDiameter.getText().isEmpty()) {
            //show a dialog box with the error message
           JOptionPane.showMessageDialog(rootPane, "Provide the internal diameter of the pipe.", "Empty Internal diameter!", JOptionPane.ERROR_MESSAGE);
            intDiameterLabel.setForeground(Color.red);
            return;
        }
        //validate external Diameter of the pipe
        if(externalDiameter.getText().isEmpty()) {
            //show a dialog box with the error message
           JOptionPane.showMessageDialog(rootPane, "Provide the external diameter of the pipe.", "Empty External diameter!", JOptionPane.ERROR_MESSAGE);
            extDiameterLabel.setForeground(Color.red);
            return;
        }
        //validate coil length of the pipe
        if(coilLength.getText().isEmpty()) {
            //show a dialog box with the error message
           JOptionPane.showMessageDialog(rootPane, "Provide the coil length of the pipe.", "Empty Coil length!", JOptionPane.ERROR_MESSAGE);
            coilLengthLabel.setForeground(Color.red);
            return;
        }
        //validate cost of the pipe
        if(pipeCost.getText().isEmpty()) {
            //show a dialog box with the error message
           JOptionPane.showMessageDialog(rootPane, "Provide the cost of the pipe.", "Empty Pipe cost!", JOptionPane.ERROR_MESSAGE);
            pipeCostLabel.setForeground(Color.red);
            return;
        }
        
        /* Get the data entered in the blank tubing form */
        try {
            
            pipeModel = modelName.getText().trim();
            categoryOfPipe = (String)pipeCategory.getSelectedItem();
            colorOfPipe = (String)color.getSelectedItem();
            materialOfPipe = (String)material.getSelectedItem();
            
            pipeFlowRate = Float.parseFloat(flowRate.getText().trim());
            pipeInternalDiameter = Float.parseFloat(internalDiameter.getText().trim());
            pipeExternalDiameter = Float.parseFloat(externalDiameter.getText().trim());
            pipeCoilLength = Float.parseFloat(coilLength.getText().trim());
            cost = Float.parseFloat(pipeCost.getText().trim());
            
            //set the data in the blank tubing object
            newPipe.setPipeModelName(pipeModel);
            newPipe.setPipeColor(colorOfPipe);
            newPipe.setPipeCategory(categoryOfPipe);
            newPipe.setPipeFlowRate(pipeFlowRate);
            newPipe.setPipeInternalDiameter(pipeInternalDiameter);
            newPipe.setPipeExternalDiameter(pipeExternalDiameter);
            newPipe.setPipeCoilLength(pipeCoilLength);
            newPipe.setPipeCost(cost);
            newPipe.setPipeMaterial(materialOfPipe);
            
            //send the new pipe object to the controller
            String message = pipe.getPipeData(newPipe);
            
            //show the response
            if(message.startsWith("New")){
                JOptionPane.showMessageDialog(rootPane, message, "Saved Successfully!", JOptionPane.INFORMATION_MESSAGE);
                  
            }
            else {
                JOptionPane.showMessageDialog(rootPane, message, "Saving Failed!", JOptionPane.ERROR_MESSAGE);
            }
            //clear the fields
            pipeCost.setText("");
            modelName.setText("");
            flowRate.setText("");
            internalDiameter.setText("");
            externalDiameter.setText("");
            coilLength.setText("");
            
            //clear the object
            newPipe = null;
            
           
        }
        catch(NumberFormatException nfe) {
            //show a dialog box with the error message
           JOptionPane.showMessageDialog(rootPane, "Flow rate, internal diameter, external diameter\n"
                   + "and coil length have to be float numbers.", "Not A number!", JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_saveBtnActionPerformed

    private void flowRateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_flowRateMouseClicked
        //Restore the original blcak color of the lable when it is clicked into
        flowRateLabel.setForeground(Color.BLACK);
    }//GEN-LAST:event_flowRateMouseClicked

    private void internalDiameterMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_internalDiameterMouseClicked
        //Restore the original blcak color of the lable when it is clicked into
        intDiameterLabel.setForeground(Color.BLACK);
    }//GEN-LAST:event_internalDiameterMouseClicked

    private void externalDiameterMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_externalDiameterMouseClicked
        //Restore the original blcak color of the lable when it is clicked into
        extDiameterLabel.setForeground(Color.BLACK);
    }//GEN-LAST:event_externalDiameterMouseClicked

    private void coilLengthMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_coilLengthMouseClicked
        //Restore the original blcak color of the lable when it is clicked into
        coilLengthLabel.setForeground(Color.BLACK);
    }//GEN-LAST:event_coilLengthMouseClicked

    private void pipeCostMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pipeCostMouseClicked
        //Restore the original blcak color of the lable when it is clicked into
        pipeCostLabel.setForeground(Color.BLACK);
    }//GEN-LAST:event_pipeCostMouseClicked

    private void pipeCostKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pipeCostKeyPressed
        // Ensure that the typed in characters are numbers and have no commas
        char keyPressed  = evt.getKeyChar();
        
        if(Character.isLetter(keyPressed)) {
            //diable editing of the pipeCost text field
            pipeCost.setEditable(false);
            //ring a beep
            getToolkit().beep();
            
            //show the error message
            costError.setText("Fill in Numbers only!");
        }
        else if((keyPressed == KeyEvent.VK_COMMA) || (keyPressed == KeyEvent.VK_SPACE)) {
            //diable editing of the pipeCost text field
            pipeCost.setEditable(false);
            
            //ring a beep
            getToolkit().beep();
            //show the error message
            costError.setText("Commas and Spaces not allowed!");
            
        }
        else {
            pipeCost.setEditable(true);
            costError.setText("");
        }
        
    }//GEN-LAST:event_pipeCostKeyPressed

    private void flowRateKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_flowRateKeyPressed
         // Ensure that the typed in characters are numbers and have no commas
        char keyPressed  = evt.getKeyChar();
        
        if(Character.isLetter(keyPressed)) {
            //diable editing of the pipeCost text field
            flowRate.setEditable(false);
            //ring a beep
            getToolkit().beep();
            
            //show the error message
            flowRateError.setText("Fill in Numbers only!");
        }
        else {
            //enable edditing of the field
            flowRate.setEditable(true);
            //clear the error message
            flowRateError.setText("");
        }
    }//GEN-LAST:event_flowRateKeyPressed

    private void internalDiameterKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_internalDiameterKeyPressed
        // Ensure that the typed in characters are numbers and have no commas
        char keyPressed  = evt.getKeyChar();
        
        if(Character.isLetter(keyPressed)) {
            //diable editing of the pipeCost text field
            internalDiameter.setEditable(false);
            //ring a beep
            getToolkit().beep();
            
            //show the error message
            intDiameterError.setText("Fill in Numbers only!");
        }
        else {
            //enable edditing of the field
            internalDiameter.setEditable(true);
            //clear the error message
            intDiameterError.setText("");
        }
    }//GEN-LAST:event_internalDiameterKeyPressed

    private void externalDiameterKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_externalDiameterKeyPressed
        // Ensure that the typed in characters are numbers and have no commas
        char keyPressed  = evt.getKeyChar();
        
        if(Character.isLetter(keyPressed)) {
            //diable editing of the pipeCost text field
            externalDiameter.setEditable(false);
            //ring a beep
            getToolkit().beep();
            
            //show the error message
            extDiameterError.setText("Fill in Numbers only!");
        }
        else {
            //enable edditing of the field
            externalDiameter.setEditable(true);
            //clear the error message
            extDiameterError.setText("");
        }
    }//GEN-LAST:event_externalDiameterKeyPressed

    private void coilLengthKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_coilLengthKeyPressed
        // Ensure that the typed in characters are numbers and have no commas
        char keyPressed  = evt.getKeyChar();
        
        if(Character.isLetter(keyPressed)) {
            //diable editing of the pipeCost text field
            coilLength.setEditable(false);
            //ring a beep
            getToolkit().beep();
            
            //show the error message
            coilLengthError.setText("Fill in Numbers only!");
        }
        else {
            //enable edditing of the field
            coilLength.setEditable(true);
            //clear the error message
            coilLengthError.setText("");
        }
    }//GEN-LAST:event_coilLengthKeyPressed
    /**
     * Setting values in the combo box
     */
    private void setComboBoxValues(JComboBox<String> combbox, ArrayList<String> values) {
        String[] categories = new String[values.size()];
        //set the combobox values
        for(int i = 0; i < values.size(); i++) {
            categories[i] = values.get(i);
        }
        combbox.setModel(new javax.swing.DefaultComboBoxModel<>(categories));
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddBlankTubing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddBlankTubing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddBlankTubing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddBlankTubing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddBlankTubing().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel addBlankipePanel;
    private javax.swing.JLabel andBlankTubingHeading;
    private javax.swing.JButton cancelBtn;
    private javax.swing.JTextField coilLength;
    private javax.swing.JLabel coilLengthError;
    private javax.swing.JLabel coilLengthLabel;
    private javax.swing.JComboBox<String> color;
    private javax.swing.JLabel costError;
    private javax.swing.JLabel extDiameterError;
    private javax.swing.JLabel extDiameterLabel;
    private javax.swing.JTextField externalDiameter;
    private javax.swing.JTextField flowRate;
    private javax.swing.JLabel flowRateError;
    private javax.swing.JLabel flowRateLabel;
    private javax.swing.JPanel footerPanel;
    private javax.swing.JLabel intDiameterError;
    private javax.swing.JLabel intDiameterLabel;
    private javax.swing.JTextField internalDiameter;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JComboBox<String> material;
    private javax.swing.JTextField modelName;
    private javax.swing.JLabel modelNameLabel;
    private javax.swing.JComboBox<String> pipeCategory;
    private javax.swing.JTextField pipeCost;
    private javax.swing.JLabel pipeCostLabel;
    private javax.swing.JButton saveBtn;
    // End of variables declaration//GEN-END:variables
}
